{"version":3,"file":"static/js/264.3139b2d7.chunk.js","mappings":"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","sources":["api/event.jsx","pages/Home.jsx"],"sourcesContent":["import toast from 'react-hot-toast';\r\nimport dayjs from 'dayjs';\r\n\r\n\r\nconst IP = process.env.REACT_APP_IP;\r\nconst PORT = process.env.REACT_APP_PORT;\r\n\r\nconst create = (title, content, token) => {\r\n  const url = `http://${IP}:${PORT}/api/event/create`;\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({\r\n      'title': title,\r\n      'content': content\r\n    })\r\n  };\r\n\r\n  fetch(url, requestOptions).then(async (response) => {\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      toast.success(data.detail);\r\n    } else {\r\n      toast.error(data.detail);\r\n    }\r\n  });\r\n}\r\n\r\nconst remove = (id, token) => {\r\n  const url = `http://${IP}:${PORT}/api/event/remove`;\r\n\r\n  const requestOptions = {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({\r\n      'event_id': id\r\n    })\r\n  };\r\n\r\n  fetch(url, requestOptions).then(async (response) => {\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      toast.success(data.detail);\r\n    } else {\r\n      toast.error(data.detail);\r\n    }\r\n  });\r\n}\r\n\r\nconst update = (id, title, content, token) => {\r\n  const url = `http://${IP}:${PORT}/api/event/update`;\r\n\r\n  const requestOptions = {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({\r\n      'event_id': id,\r\n      'title': title,\r\n      'content': content\r\n    })\r\n  };\r\n\r\n  fetch(url, requestOptions).then(async (response) => {\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      toast.success(data.detail);\r\n    } else {\r\n      toast.error(data.detail);\r\n    }\r\n  });\r\n}\r\n\r\nconst search = (date, token, setEventList) => {\r\n  const url = `http://${IP}:${PORT}/api/event/search/date/${date}`;\r\n\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  };\r\n\r\n  fetch(url, requestOptions).then(async (response) => {\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      data.map((item) => item.date = dayjs(date).format('YYYY-MM-DD'))\r\n      setEventList(data);\r\n    } else {\r\n      toast.error(data.detail);\r\n    }\r\n  });\r\n}\r\n\r\nconst event = {\r\n  create,\r\n  remove,\r\n  update,\r\n  search\r\n}\r\n\r\nexport default event;","import { useState, useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/zh-cn';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { useAuthContext } from '../context/AuthContext';\r\nimport eventAPI from '../api/event';\r\n\r\n\r\nconst Home = () => {\r\n  const { userState } = useAuthContext();\r\n\r\n  const [date, setDate] = useState(dayjs());\r\n  const [eventList, setEventList] = useState([]);\r\n\r\n  const selectDate = (newDate) => {\r\n    setDate(newDate);\r\n    eventAPI.search(dayjs(newDate).format('YYYY-MM-DD'), userState.value.token, setEventList);\r\n  }\r\n\r\n  useEffect(() => {\r\n    eventAPI.search(dayjs().format('YYYY-MM-DD'), userState.value.token, setEventList);\r\n  }, [userState.value.token]);\r\n\r\n  return (\r\n    <Box width=\"100%\">\r\n      <Box sx={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        marginY: 8\r\n      }}>\r\n        <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale=\"zh-cn\">\r\n          <DatePicker\r\n            value={date}\r\n            onChange={selectDate}\r\n          />\r\n        </LocalizationProvider>\r\n      </Box>\r\n      <Grid container spacing={2} width=\"100%\" mt={2}>\r\n        {eventList.map((item, index) => (\r\n          <Grid item key={`event-${index}`} xs={10} sm={6} md={4} sx={{\r\n            border: '2px solid #FFFFFF',\r\n            borderRadius: '4px',\r\n            p: 2,\r\n            m: 2\r\n          }}>\r\n            事件編號: {item.id}<br />\r\n            標題: {item.title}<br />\r\n            內容: {item.content}<br />\r\n            時間: {item.date}<br />\r\n            事件等級: {item.role}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\n\r\nexport default Home;"],"names":["IP","process","PORT","create","title","content","token","url","concat","requestOptions","method","headers","body","URLSearchParams","fetch","then","async","data","response","json","ok","toast","success","detail","error","remove","id","update","search","date","setEventList","map","item","dayjs","format","Home","userState","useAuthContext","setDate","useState","eventList","useEffect","eventAPI","value","_jsxs","Box","width","children","_jsx","sx","display","justifyContent","marginY","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","DatePicker","onChange","newDate","Grid","container","spacing","mt","index","xs","sm","md","border","borderRadius","p","m","role"],"sourceRoot":""}