{"version":3,"file":"static/js/489.78c4508a.chunk.js","mappings":"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","sources":["api/role.jsx","api/user.jsx","components/Typography.jsx","pages/User/Create.jsx"],"sourcesContent":["import toast from 'react-hot-toast';\r\n\r\n\r\nconst IP = process.env.REACT_APP_IP;\r\nconst PORT = process.env.REACT_APP_PORT;\r\n\r\nconst search = (setRoleList) => {\r\n    const url = `http://${IP}:${PORT}/api/role/search`;\r\n  \r\n    const requestOptions = {\r\n      method: 'GET'\r\n    };\r\n  \r\n    fetch(url, requestOptions).then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      if (response.ok) {\r\n        setRoleList(data);\r\n      } else {\r\n        toast.error(data.detail);\r\n      }\r\n    });\r\n  }\r\n  \r\n  const role = {\r\n    search\r\n  }\r\n  \r\n  export default role;","import toast from 'react-hot-toast';\r\n\r\n\r\nconst IP = process.env.REACT_APP_IP;\r\nconst PORT = process.env.REACT_APP_PORT;\r\n\r\nconst login = (username, password, userState, navigate) => {\r\n  const url = `http://${IP}:${PORT}/api/user/login`;\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({\r\n      'username': username,\r\n      'password': password\r\n    })\r\n  };\r\n\r\n  fetch(url, requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        userState.setValue(data.detail);\r\n\r\n        navigate('/');\r\n      } else {\r\n        toast.error(data.detail);\r\n      }\r\n    });\r\n}\r\n\r\nconst create = (username, password, role, token) => {\r\n  const url = `http://${IP}:${PORT}/api/user/create`;\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({\r\n      'username': username,\r\n      'password': password,\r\n      'role': role\r\n    })\r\n  };\r\n\r\n  fetch(url, requestOptions).then(async (response) => {\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      toast.success(data.detail);\r\n    } else {\r\n      toast.error(data.detail);\r\n    }\r\n  });\r\n}\r\n\r\nconst remove = (username, token) => {\r\n  const url = `http://${IP}:${PORT}/api/user/remove`;\r\n\r\n  const requestOptions = {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({\r\n      'username': username,\r\n    })\r\n  };\r\n\r\n  fetch(url, requestOptions).then(async (response) => {\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      toast.success(data.detail);\r\n    } else {\r\n      toast.error(data.detail);\r\n    }\r\n  });\r\n}\r\n\r\nconst update = (username, password, role, token) => {\r\n  const url = `http://${IP}:${PORT}/api/user/update`;\r\n\r\n  const requestOptions = {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({\r\n      'username': username,\r\n      'password': password,\r\n      'role': role\r\n    })\r\n  };\r\n\r\n  fetch(url, requestOptions).then(async (response) => {\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      toast.success(data.detail);\r\n    } else {\r\n      toast.error(data.detail);\r\n    }\r\n  });\r\n}\r\n\r\nconst search = (setUserList, username, token) => {\r\n  const url = `http://${IP}:${PORT}/api/user/search`;\r\n\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  };\r\n\r\n  fetch(url, requestOptions).then(async (response) => {\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      const newData = data.filter((item) => item.username !== username);\r\n\r\n      setUserList(newData);\r\n    } else {\r\n      toast.error(data.detail);\r\n    }\r\n  });\r\n}\r\n\r\nconst user = {\r\n  login,\r\n  create,\r\n  remove,\r\n  update,\r\n  search\r\n}\r\n\r\nexport default user;","import clsx from 'clsx';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport React from 'react';\r\n\r\n\r\nconst StyledBox = styled(Box)(({ texttransformstyle, ellipsis }) => ({\r\n  textTransform: texttransformstyle || 'none',\r\n  whiteSpace: ellipsis ? 'nowrap' : 'normal',\r\n  overflow: ellipsis ? 'hidden' : '',\r\n  textOverflow: ellipsis ? 'ellipsis' : ''\r\n}));\r\n\r\nexport const H1 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => (\r\n  <StyledBox\r\n    texttransformstyle={textTransform}\r\n    ellipsis={ellipsis}\r\n    className={clsx({ [className || '']: true })}\r\n    component=\"h1\"\r\n    mb={0}\r\n    mt={0}\r\n    fontSize=\"28px\"\r\n    fontWeight=\"600\"\r\n    lineHeight=\"1.5\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledBox>\r\n);\r\n\r\nexport const H2 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => (\r\n  <StyledBox\r\n    texttransformstyle={textTransform}\r\n    ellipsis={ellipsis}\r\n    className={clsx({ [className || '']: true })}\r\n    component=\"h2\"\r\n    mb={0}\r\n    mt={0}\r\n    fontSize=\"24px\"\r\n    fontWeight=\"600\"\r\n    lineHeight=\"1.5\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledBox>\r\n);\r\n\r\nexport const H3 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => (\r\n  <StyledBox\r\n    texttransformstyle={textTransform}\r\n    ellipsis={ellipsis}\r\n    className={clsx({ [className || '']: true })}\r\n    component=\"h3\"\r\n    mb={0}\r\n    mt={0}\r\n    fontSize=\"18px\"\r\n    fontWeight=\"600\"\r\n    lineHeight=\"1.5\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledBox>\r\n);\r\n\r\nexport const H4 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => (\r\n  <StyledBox\r\n    texttransformstyle={textTransform}\r\n    ellipsis={ellipsis}\r\n    className={clsx({ [className || '']: true })}\r\n    component=\"h4\"\r\n    mb={0}\r\n    mt={0}\r\n    fontSize=\"16px\"\r\n    fontWeight=\"500\"\r\n    lineHeight=\"1.5\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledBox>\r\n);\r\n\r\nexport const H5 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => (\r\n  <StyledBox\r\n    texttransformstyle={textTransform}\r\n    ellipsis={ellipsis}\r\n    className={clsx({ [className || '']: true })}\r\n    component=\"h5\"\r\n    mb={0}\r\n    mt={0}\r\n    fontSize=\"14px\"\r\n    fontWeight=\"600\"\r\n    lineHeight=\"1.5\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledBox>\r\n);\r\n\r\nexport const H6 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => (\r\n  <StyledBox\r\n    texttransformstyle={textTransform}\r\n    ellipsis={ellipsis}\r\n    className={clsx({ [className || '']: true })}\r\n    component=\"h6\"\r\n    mb={0}\r\n    mt={0}\r\n    fontSize=\"13px\"\r\n    fontWeight=\"600\"\r\n    lineHeight=\"1.5\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledBox>\r\n);\r\n\r\nexport const Paragraph = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => (\r\n  <StyledBox\r\n    texttransformstyle={textTransform}\r\n    ellipsis={ellipsis}\r\n    className={clsx({ [className || '']: true })}\r\n    component=\"p\"\r\n    mb={0}\r\n    mt={0}\r\n    fontSize=\"14px\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledBox>\r\n);\r\n\r\nexport const Small = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => (\r\n  <StyledBox\r\n    texttransformstyle={textTransform}\r\n    ellipsis={ellipsis}\r\n    className={clsx({ [className || '']: true })}\r\n    component=\"small\"\r\n    fontSize=\"12px\"\r\n    fontWeight=\"500\"\r\n    lineHeight=\"1.5\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledBox>\r\n);\r\n\r\nexport const Span = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => (\r\n  <StyledBox\r\n    texttransformstyle={textTransform}\r\n    ellipsis={ellipsis}\r\n    className={clsx({ [className || '']: true })}\r\n    component=\"span\"\r\n    lineHeight=\"1.5\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledBox>\r\n);\r\n\r\nexport const Tiny = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => (\r\n  <StyledBox\r\n    texttransformstyle={textTransform}\r\n    ellipsis={ellipsis}\r\n    className={clsx({ [className || '']: true })}\r\n    component=\"small\"\r\n    fontSize=\"11px\"\r\n    lineHeight=\"1.5\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledBox>\r\n);","import { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\nimport { H1 } from '../../components/Typography';\r\nimport userAPI from '../../api/user';\r\nimport roleAPI from '../../api/role';\r\n\r\n\r\nconst Create = () => {\r\n  const { userState } = useAuthContext();\r\n\r\n  const [role, setRole] = useState('');\r\n  const [roleList, setRoleList] = useState([]);\r\n\r\n  const create = (event) => {\r\n    event.preventDefault();\r\n\r\n    const data = new FormData(event.currentTarget);\r\n    const username = data.get('username');\r\n    const password = data.get('password');\r\n\r\n    if (username && password && role) {\r\n      const level = (role === '教師' || role === '看護') ? 1 : 2;\r\n\r\n      userAPI.create(username, password, level, userState.value.token);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    roleAPI.search(setRoleList);\r\n  }, []);\r\n\r\n  return (\r\n    <Container fixed sx={{ width: '100%', height: '100%' }}>\r\n      <Box component=\"form\" onSubmit={create} noValidate sx={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%'\r\n      }}>\r\n        <Stack spacing={2} sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <H1>創建使用者</H1>\r\n          <TextField id=\"username\" name=\"username\" label=\"帳號\" variant=\"outlined\" />\r\n          <TextField id=\"password\" name=\"password\" label=\"密碼\" variant=\"outlined\" />\r\n          <FormControl fullWidth>\r\n            <InputLabel>身份別</InputLabel>\r\n            <Select\r\n              value={role}\r\n              label=\"身份別\"\r\n              onChange={(event) => setRole(event.target.value)}\r\n            >\r\n              {(roleList.length === 0) ? (\r\n                <MenuItem key={`role-0`} value={null}>\r\n                  None\r\n                </MenuItem>\r\n              ) : (\r\n                roleList.map((item, index) => (\r\n                  <MenuItem key={`role-${index}`} value={item.name}>\r\n                    {item.name}\r\n                  </MenuItem>\r\n                ))\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n          <Button type=\"submit\" variant=\"outlined\" size=\"large\">送出</Button>\r\n        </Stack>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Create;"],"names":["search","setRoleList","url","concat","process","fetch","method","then","async","data","response","json","ok","toast","error","detail","IP","PORT","login","username","password","userState","navigate","requestOptions","headers","body","URLSearchParams","setValue","create","role","token","success","remove","update","setUserList","newData","filter","item","StyledBox","styled","Box","_ref","texttransformstyle","ellipsis","textTransform","whiteSpace","overflow","textOverflow","H1","_ref2","children","className","props","_jsx","clsx","component","mb","mt","fontSize","fontWeight","lineHeight","H3","_ref4","Create","useAuthContext","setRole","useState","roleList","useEffect","roleAPI","Container","fixed","sx","width","height","onSubmit","event","preventDefault","FormData","currentTarget","get","level","userAPI","value","noValidate","display","justifyContent","alignItems","_jsxs","Stack","spacing","TextField","id","name","label","variant","FormControl","fullWidth","InputLabel","Select","onChange","target","length","MenuItem","map","index","Button","type","size"],"sourceRoot":""}